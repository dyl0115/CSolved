<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.csolved.csolved.domain.question.mapper.QuestionMapper">

    <insert id="insertQuestion" useGeneratedKeys="true" keyProperty="id">
        insert into questions(user_id,
                              anonymous,
                              title,
                              content,
                              category_id,
                              views,
                              deleted_at)
        values (#{authorId},
                #{anonymous},
                #{title},
                #{content},
                #{categoryId},
                #{views},
                #{deletedAt});
    </insert>

    <update id="updateQuestion">
        update questions
        set anonymous   = #{question.anonymous},
            title       = #{question.title},
            content     = #{question.content},
            category_id = #{question.categoryId}
        where id = #{questionId};
    </update>

    <select id="findAllQuestionsCount">
        select count(*)
        from questions
        where deleted_at is null;
    </select>


    <select id="getQuestions">
        select q.*,
               u.nickname author_nickname,
               c.id       category_id,
               c.name     category_name
        from questions q
                 left join users u on q.user_id = u.id
                 left join category c on q.category_id = c.id
        order by q.id desc
        limit #{offset}, #{size};
    </select>

    <select id="getQuestionDetail">
        select q.*,
               u.id       author_id,
               u.nickname author_nickname,
               c.id       category_id,
               c.name     category_name
        from questions q
                 left join users u on q.user_id = u.id
                 left join category c on q.category_id = c.id
        where q.id = #{questionId};
    </select>

    <update id="softDeleteQuestionByQuestionId">
        update questions
        set deleted_at = current_timestamp
        where id = #{questionId};
    </update>

    <select id="existUserInQuestionLikes">
        select exists(select 1
                      from question_likes
                      where user_id = #{authorId}
                        and question_id = #{questionId});
    </select>

    <update id="increaseLikesInQuestions">
        update questions
        set likes = likes + 1
        where id = #{questionId};
    </update>

    <insert id="insertUserInQuestionLikes">
        insert into question_likes(question_id, user_id)
        values (#{questionId}, #{authorId});
    </insert>

    <update id="increaseView">
        update questions
        set views = views + 1
        where id = #{questionId};
    </update>
</mapper>