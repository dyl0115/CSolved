<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.csolved.csolved.domain.answer.mapper.AnswerMapper">
    <insert id="insertAnswer" useGeneratedKeys="true" keyProperty="id">
        insert into answers(question_id,
                            user_id,
                            anonymous,
                            content,
                            created_at,
                            deleted_at)
        values (#{questionId},
                #{userId},
                #{anonymous},
                #{content},
                #{createdAt},
                #{deletedAt});
    </insert>

    <select id="getAnswersByQuestionId">
        select a.id,
               u.id       author_id,
               u.nickname author_nickname,
               a.anonymous,
               a.content,
               a.created_at
        from answers a
                 left join users u on u.id = a.user_id
        where question_id = #{questionId};
    </select>

    <select id="findAverageScoreByAnswerId">
        select coalesce(avg(score), 0)
        from answer_ratings
        where answer_id = #{answerId};
    </select>

    <select id="findVoterCountByAnswerId">
        select coalesce(count(*), 0)
        from answer_ratings
        where answer_id = #{answerId};
    </select>

    <select id="existUserInAnswerRatings">
        select exists(select 1
                      from answer_ratings
                      where answer_id = #{answerId}
                        and user_id = #{userId});
    </select>

    <insert id="insertAnswerScore">
        insert into answer_ratings(answer_id,
                                   user_id,
                                   score)
        values (#{answerId},
                #{userId},
                #{score});
    </insert>

    <select id="existCommentInAnswer">
        select exists(select 1
                      from comments
                      where answer_id = #{answerId})
    </select>

    <update id="softDeleteAnswer">
        update answers
        set content    = '[삭제된 답변입니다.]',
            deleted_at = current_timestamp
        where id = #{answerId}
    </update>

    <delete id="hardDeleteAnswerRatings">
        delete
        from answer_ratings
        where answer_id = #{answerId};
    </delete>

    <delete id="hardDeleteAnswer">
        delete
        from answers
        where id = #{answerId}
    </delete>
</mapper>